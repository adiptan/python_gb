def thesaurus(*args, need_sort=False):
    """
    :param args: Всё что подаётся на вход распаковываем в список
    :param need_sort: Флаг. Если нужна сортировка - True, иначе - False
    :return: Функция возвращает словарь где ключ первая буква имени, а элемент это список переданных в функцию имен.
    """
    dict_main = {}
    for el in args:
        some_list = [el]  # В цикле прохожусь по списку args, и сразу добавляю переданное имя в новый список
        first_letter = el[0]  # Присваиваю переменной значение первой буквы имени
        if first_letter not in dict_main:  # Если полученной буквы нет в ключах словаря, то ключ равен первой букве, а
            dict_main[first_letter] = some_list  # в качестве значения используется созданный список
        else:
            dict_main[first_letter].append(el)  # Если такой ключ уже есть в словаре - то, просто добавляю имя в список

# Сортировка сделана с помощью флага
    if need_sort:  # Если флаг need_sort = True
        keys_list = [key for key in dict_main.keys()]  # Создаю список ключей словаря
        keys_list.sort()  # Сортирую элементы списка
        changed_dict = {}
        for i in keys_list:  # И добавляю отсортированные элементы в качестве ключей в новый словарь, а в качестве
            changed_dict[i] = dict_main[i]  # значений беру элементы в исходном словаре.
    else:
        return dict_main  # Иначе, возвращаю исходный словарь dict_main

    return changed_dict  # Иначе возвращаю созданный словарь changed_dict


print(thesaurus('Света', 'Антон', 'Самуил', 'Жерар', 'Макс', 'Кристина', 'Марсель', 'Боря',
                'Кэрол', 'Федя', 'Миша', 'Ярослав', 'Матвей', 'Семен', need_sort=True))
